c
check.ids == []
check.ids != []
!check.ids
check.id
!check
check
check.self
check.methods
check.attributes
!check[0]
check[0]
!!check
!check
check
c
exit
...equip.exchanges
equip.exchanges[0]
equip.exchanges
equip
c
            equip.exchanges
        owner_exchanges = owner_equipment.map do |equip| 
owner_exchanges = owner_equipment.map do |equip| 
            equip.exchanges
        owner_exchanges = owner_equipment.map do |equip| 
owner_equipment = Equipment.where user_id: session[:user_id]
c
Exchange.all
c
avail_cat
c
Exchange.all
Exchange.find params[:id]
params[:id]
c
params[:id]
c
equip = Equipment.find params[:id]
Equipment.find params[:id]
Equipment.all
params[:id]
equip
c
cats
c
exit
avail_cat != nil
avail_cat = AvailableCategory.find_by name: params[:category]
c
params
c
Equipment.create equip_params
Equipment.create equip_params <<{user_id: user.id}
Equipment.create equip_params << user_id: user.id
Equipment.create equip_params, user_id: user.id
equip_params
user = get_user
c
equipment
equipment = Equipment.where user_id: user.id
user = get_user
session[:user_id]
c
session[:user_id]
user = get_user
c
"" == nil
params[:token]
c
cont
user =sexiotUser.find_by(reset_password_token: 64ecbe8f29a07017de0a)
usexiotUser.find_by(reset_password_token: 64ecbe8f29a07017de0a)
User.find_by(reset_password_token: 64ecbe8f29a07017de0a)
user
c
params[:email].blank?
params[:email]
c
@user.reset_password_token
@user
c
self.reset_password_token
self
